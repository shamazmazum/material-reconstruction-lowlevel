#version 440

#define GRP_SIZE 64

layout(local_size_x = GRP_SIZE) in;

layout(std430, binding = 0) buffer lay0 {
    float array[];
};

layout(push_constant) uniform Parameters {
    uint len;
} params;

shared float tmp[GRP_SIZE];

void main() {
    uint i;
    uint global_size = gl_NumWorkGroups.x * GRP_SIZE;
    float acc = 0;

    for (i=0; i<params.len; i+=global_size) {
        uint idx = i + gl_GlobalInvocationID.x;
        if (idx < params.len) {
            acc += array[idx];
        }
    }
    
    tmp[gl_LocalInvocationID.x] = acc;
    memoryBarrierShared();

    for (i=GRP_SIZE>>1; i>0; i>>=1) {
        if (gl_LocalInvocationID.x < i) {
            tmp[gl_LocalInvocationID.x] += tmp[gl_LocalInvocationID.x + i];
        }
        memoryBarrierShared();
    }

    if (gl_LocalInvocationID.x == 0) {
        array[gl_WorkGroupID.x] = tmp[0];
    }
}
